<?xml version="1.0" encoding="UTF-8"?>
<project name="Lib_genral">
    <description>

        --- RSGallery2 phing general use file  ---

        * Supports patch of manifest file
        *

    </description>

    <!--
    .........................................................................
    ToDo:
    .........................................................................
    *
    *
    * .
    * .
    * .
    * .
    -->

    <!--
    =========================================================================
       Parameter
    =========================================================================
    -->

<!--    <property name="buildNumberFile" value="buildNumberFile????" override="true" />-->

<!--    <property name="buildNumberNotDefined" value="999999999999" override="true" />-->
<!--    <property name="libBuildNumber" value="${buildNumberNotDefined}" override="true" />&ndash;&gt;-->

    <!--
    =========================================================================

    =========================================================================
    -->

	<!--
	.........................................................................
	update manifestFile
	.........................................................................
	Updates version, creationDate, and copyright date
	-->

	<target name="manifestFile">
		<echo msg="manifestFile start" />
		<echo msg="   date.day.month.year: ${date.day.month.year}" />

		<echo msg="   manifest file='${srcManifestFile}'" />

		<reflexive file="${srcManifestFile}">
			<filterchain>
				<replaceregexp>
					<regexp pattern="(?&lt;=&lt;creationDate&gt;).*(?=&lt;)" replace="${date.day.month.year}"/>

					<!-- <copyright>(c) 2003-2020 RSGallery2 Team</copyright> -->
					<regexp pattern="(?&lt;=&lt;copyright&gt;\([cC]\) 20..\-).*(?= RSGallery2 Team)" replace="${date.year}"/>
					<!-- <copyright>anything which does not start with (C) </copyright> -->
					<regexp pattern="&lt;copyright&gt;(?!\(c\))(.*)(?=&lt;)" replace="&lt;copyright&gt;(c) ${date.year}-${date.year} RSGallery2 Team"/>
				</replaceregexp>
			</filterchain>
		</reflexive>

		<echo msg="manifestFile end" />
	</target>

	<!--
	.........................................................................
	zipFiles
	.........................................................................
	-->

	<target name="zipFiles">
		<echo msg="zipFiles start" />

		<echo msg="   dstModulesCmp='${dstModulesCmp}'" />
		<echo msg="   build.version: ${build.version}" />

		<if>
			<!-- on package no timestamp -->
			<equals arg1="${isNoDateInZipName}" arg2="1" />
			<then>
				<echo message="zip: No timestamp" />
				<!-- called by package -->
				<if>
					<equals arg1="${isCalledByPackage}" arg2="0" />
					<then>
						<echo msg="    direct call" />
						<property name="destfile" value="${buildDir}/${main_name}.zip" override="true" />
					</then>
					<else>
						<property name="destfile" value="${buildPackageDir}/${main_name}.zip" override="true" />
					</else>
				</if>
			</then>
			<else>
				<echo message="zip: with timestamp" />

				<!-- Retrieve changed version number for zip ? ................................. -->

				<loadfile property="newVersion" file="${dstManifestFile}" >
					<filterchain>
						<!-- find line-->
						<linecontainsregexp>
							<regexp pattern="&lt;version&gt;(.*)&lt;" />
						</linecontainsregexp>
						<!-- extract version-->
						<replaceregexp>
							<regexp pattern="(.*&lt;version&gt;)(.*)(&lt;&#47;version&gt;)" replace="\2" />
						</replaceregexp>
						<striplinebreaks />
					</filterchain>
				</loadfile>
				<echo msg="newVersion: ${newVersion}" />

				<property name="destfile" value="${buildDir}/${main_name}.${build.postfix}${newVersion}_${dateYearMonthDay}.zip" override="true" />
			</else>
		</if>

		<echo msg="destfile='${destfile}'" />

		<zip destfile="${destfile}">
			<fileset dir="${dstPath}">
				<include name="**" />
			</fileset>
		</zip>

		<echo msg="zipFiles end" />
	</target>

	<!--
    =========================================================================
      increment
    =========================================================================
    -->

	<adhoc-task name="echoConsole"><![CDATA[
        class echoConsole extends Task {
            private $usrText;

            function setUsrText($usrText) {
                $this->usrText = $usrText;
            }

            function main() {

				echo ($this->usrText . PHP_EOL);

            }
        }
	]]></adhoc-task>




</project>
