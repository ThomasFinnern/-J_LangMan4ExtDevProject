<?xml version="1.0" encoding="UTF-8"?>
<project name="RSG2_Component" default="buildComponent">
	<description>
		--- Lang4dev component build script with phing ---
	
		The script 2 copies the component files from path
		..\..\LangMan4Dev and creates a build in folder
		..\.packages\tmp. It replaces or changes
		text in files. Then these files are zipped

		All paths start at the build folder. Changes
		are done in the copied files. Use command
		"phing -f updateProject.xml" before to
		standardize all files of the project

		Changes in files
		* Version and date for copyright in *.php files
		* Build ID (file) will be increased and used in version string
		*
		* (Set lines with @since to actual date in *.php)
		*
		* .
		* .

		command line
		phing -logfile .\build.comp.log  -f .\build.comp.xml
	</description>

	<!-- 
	.........................................................................
	ToDo:
	.........................................................................
	* build number
	*
	* Patch: Set lines with @since to actual date in *.php
		<author>[AUTHOR]</author>
		<authorEmail>[AUTHOR_EMAIL]</authorEmail>
		<authorUrl>[AUTHOR_URL]</authorUrl>
	*
	* .
	* .
	* .
	* .
	-->

	<!--
	=========================================================================
	   include libraries
	=========================================================================
	-->

	<import file="build.libMath.xml"/>
	<import file="build.libBuildNumber.xml"/>
	<import file="build.libGeneral.xml" />

	<!--
	=========================================================================
	   Parameter
	=========================================================================
	-->

	<!-- 
	.........................................................................
	Version number of build
	.........................................................................	
	-->
	
    <!-- Version number of build -->
    <property name="build.version" value="0.0.1.4"  />
	    <!-- additional naming postfix -->
    <!--property name="build.postfix" value="prepare." override="true" /-->
    <property name="build.postfix" value="" />

	<!-- 
	.........................................................................
	
	.........................................................................	
	-->
	
    <property name="type" value="component" override="true" />
    <property name="comp_name" value="lang4dev" override="true" />
	<property name="extension" value="Lang4Dev" />

<!--	<php function="strtolower" returnProperty="extensionLower">-->
<!--		<param value="${extension}" />-->
<!--	</php>-->

	<!--
	.........................................................................
	external parameter
	.........................................................................
	-->
	<!-- Not delete of item, no exit message -->
	<property name="isCalledByPackage" value="0" override="true" />
	<property name="buildPackageDir" value="??? PackageDir" override="true" />
	<!-- Not add date in zip name -->
	<property name="isNoDateInZipName" value="0" override="true" />
	<!-- Do update maifest file (date/ version -->
	<property name="isUpdateManifest" value="0" override="true" />
	<property name="isShowReminder" value="0" override="true" />

	<!--
	.........................................................................
	date stamps
	.........................................................................
	-->
	
    <!-- Get the standard date for build -->
    <!-- tstamp prefix="build.date" /-->

	<tstamp>
		<format property="dateYearMonthDay" pattern="%Y%m%d" />
	</tstamp>
	
	<tstamp>
		<format property="date.year.month.day" pattern="%Y.%m.%d" />
	</tstamp>
	
	<tstamp>
		<format property="date.day.month.year" pattern="%d. %b. %Y" />
	</tstamp>
	
	<tstamp>
		<format property="date.year" pattern="%Y" />
	</tstamp>
	
	
	<!-- 
	.........................................................................
	folders
	.........................................................................
	-->
	
    <!-- Declare Project src files -->
    <property name="srcRoot" value="./../../LangMan4Dev/" override="true" />

    <!-- Set the source and destination directory for copy (sources relative to the build dir) -->
    <property name="buildDir" value="./../.packages/" />
    <property name="buildDirTemp" value="${buildDir}tmp/" override="true" />
	
    <property name="adminComponent" value="administrator/components/com_${comp_name}/" override="true" />
    <property name="siteComponent" value="/components/com_${comp_name}/" override="true" />
    <property name="media" value="/media/com_${comp_name}/" override="true" />
	
    <property name="srcAdminCmp" value="${srcRoot}${adminComponent}/" override="true" />
    <property name="srcSiteCmp" value="${srcRoot}${siteComponent}/" override="true" />
    <property name="srcMediaCmp" value="${srcRoot}${media}/" override="true" />

	<property name="srcBuildNumberFile" value="${srcAdminCmp}/buildNumber.txt" override="true" />

	<property name="dstAdminCmp" value="${buildDirTemp}${adminComponent}/" override="true" />
    <property name="dstSiteCmp" value="${buildDirTemp}${siteComponent}/" override="true" />
    <property name="dstMediaCmp" value="${buildDirTemp}${media}/" override="true" />

	<property name="dstManifestFileName" value="${comp_name}.xml" override="true" />
	<property name="dstManifestFile" value="${buildDirTemp}/${dstManifestFileName}" override="true" />
	<property name="dstAdminManifestFile" value="${dstAdminCmp}/${dstManifestFileName}" override="true" />
	<property name="srcManifestFile" value="${srcAdminCmp}/${dstManifestFileName}" override="true" />

	<!--
	.........................................................................
	source file sets
	.........................................................................
	-->
	
    <!-- File set administrator folder -->
    <fileset dir="${srcAdminCmp}" id="adminSet">
        <include name="**" />
    </fileset>

    <!-- File set site folder -->
    <fileset dir="${srcSiteCmp}" id="siteSet">
        <include name="**" />
        <exclude name="**/params.ini" />
    </fileset>

    <!-- File set media folder -->
    <fileset dir="${srcMediaCmp}" id="mediaSet">
        <include name="**" />
    </fileset>

<!--
=========================================================================
   Targets
=========================================================================
-->

<!--	<target name="build" depends="prepareSrcFolder, copy2Temp, -->
<!--	                              manifestFile, zipFiles,-->
<!--								  deleteTemp">-->
	<target name="buildComponent">

		<!-- 
		* prepareSrcFolder
		* incrementBuildNumber
		* copy2Temp
		* versionWithBuildNumber
		* doPatchComponent
		* manifestFile
		* zipFiles
		* .
		-->
		
		<echo msg="cmp:build start" />

		<echo msg="   comp_name='${comp_name}'" />
		<echo msg="   isCalledByPackage='${isCalledByPackage}'" />

		<echoConsole usrText=" * build ${comp_name}" />

		<if>
			<!-- on package no timestamp -->
			<equals arg1="${isCalledByPackage}" arg2="0" />
			<then>
				<echo msg="    direct call" />
			</then>
			<else>
				<echo msg="    package call" />
			</else>
		</if>
		
		<if>
			<!-- on update manifest file -->
			<equals arg1="${isUpdateManifest}" arg2="1" />
			<then>
				<phingcall target="ManifestBuildNumber">
				</phingcall>

				<phingcall target="manifestFile">
				</phingcall>

			</then>
		</if>

		<phingcall target="copy2Temp">
		</phingcall>

		<phingcall target="doPatchComponent">
		</phingcall>

		<phingcall target="zipFiles">
			<property name="main_name" value="${comp_name}" override="true" />
			<property name="dstPath" value="${buildDirTemp}" override="true" />
		</phingcall>

		<!--		<echo msg="   ??? isCalledByPackage='${isCalledByPackage}' ???" />-->

		<!-- Not called external, do clean up  -->
		<if>
			<equals arg1="${isCalledByPackage}" arg2="0" />
			<then>

				<!-- clean / tidy build artefacts -->
				<phing phingfile="build.clean_up.xml">
					<!-- sub task called by package -->
					<property name="buildDirTemp" value="${buildDirTemp}" />
				</phing>

			</then>
		</if>

		<!-- direct call and develop intention -->
		<if>
			<and>
				<equals arg1="${isCalledByPackage}" arg2="0" />
				<equals arg1="${isShowReminder}" arg2="1" />
			</and>
			<then>

				<!-- clean / tidy build artefacts -->
				<phing phingfile="build.goodByeMessage.xml">
					<property name="buildDoneMessage" value="" />
				</phing>

			</then>
		</if>



		<echoConsole msg="component:build done" />
		
	</target>

	<!--
    =========================================================================
       SUB - Targets
    =========================================================================
    -->

	<!--
	.........................................................................
	prepareSrcFolder
	.........................................................................
	-->

	<target name="prepareSrcFolder">
		<echo msg="prepareSrcFolder start" />

		<!-- On source path not existing -->
        <mkdir dir="${srcAdminCmp}" />
        <mkdir dir="${srcSiteCmp}" />
        <mkdir dir="${srcMediaCmp}" />
        <!-- mkdir dir="${buildDir}/tmp/plugins" / -->
		
        <echo msg="prepareSrcFolder end" />
    </target>

	<!--
	.........................................................................
	copy2Temp
	.........................................................................
	-->

	<target name="copy2Temp">
		<echo msg="copy2Temp start" />

		<!--Copy admin files to tmp folder -->
		<copy todir="${dstAdminCmp}">
			<fileset refid="adminSet" />
		</copy>
		<!-- Copy site files -->
<!--		<copy todir="${dstSiteCmp}">-->
<!--			<fileset refid="siteSet" />-->
<!--		</copy>-->
		<!-- Copy media files -->
		<copy todir="${dstMediaCmp}">
			<fileset refid="mediaSet" />
		</copy>

		<!-- Copy the root admin files manifest.xml, install....php-->

		<!-- <copy file="${srcAdminCmp}${comp_name}.xml" tofile="${buildDirTemp}${comp_name}.xml" />-->
		<copy file="${dstAdminManifestFile}" tofile="${dstManifestFile}" overwrite="true" />

		<copy file="${srcAdminCmp}changelog.xml" tofile="${buildDirTemp}changelog.xml" overwrite="true" />
		<copy file="${srcAdminCmp}install_langman4dev.php" tofile="${buildDirTemp}install_rsg2.php" overwrite="true" />
		<copy file="${srcAdminCmp}config.xml" tofile="${buildDirTemp}config.xml" overwrite="true" />
		<copy file="${srcRoot}/LICENSE.txt" tofile="${buildDirTemp}LICENSE.txt" overwrite="true" />

		<echo msg="Copy was successful" />

		<echo msg="copy2Temp end" />
	</target>

	<!--
	.........................................................................
	doPatchComponent
	.........................................................................
	ToDo: Exchange things like date, copyrght and others (?
	-->

	<target name="doPatchComponent" >
		<echo msg="mod:doPatchComponent start" />

		<!-- dmion , comp, media -->
		<!-- <echo msg="   srcModulesCmp='${srcModulesCmp}'" />-->

		<!--		-->
		<!--		reflective .... -->
		<!--		<loadfile property="version" file="${dstManifestFile}" />-->
		<!--		<echo message="manifest version = ${version}" />-->


		<echo msg="mod:doPatchComponent done" />
	</target>

</project>
